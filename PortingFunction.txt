http://www.flipcode.com/archives/A_2D_Guide_To_DirectX_8_Graphics-Using_2D_graphics_in_a_3D_Environment.shtml

// Windows.h, windows API

// Windows GDI, double buffer
WINGDIAPI BOOL  WINAPI SwapBuffers(HDC);

// SOIL...use d3dx8
unsigned int
SOIL_load_OGL_texture(
    const char *filename,
    int force_channels,
    unsigned int reuse_texture_ID,
    unsigned int flags
    );

// init .. use d3d8
void initOpenGLDrawing(GL_Window *window, Keys *keys, float backRed, float backGreen, float backBlue)
{
    glClearColor(backRed, backGreen, backGreen, 0.0f);			// Background Color
    glClearDepth(1.0f);											// Depth Buffer Setup
    glDepthFunc(GL_LEQUAL);										// Type Of Depth Testing
    glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);			// Enable Alpha Blending
    glEnable(GL_BLEND);											// Enable Blending
    glEnable(GL_TEXTURE_2D);									// Enable Texture Mapping
    glEnable(GL_CULL_FACE);										// Remove Back Face

    g_window = window;
    g_keys = keys;
}

// clearup .. use d3d8
void endOpenGLDrawing()
{
    glFlush();
}

void startOpenGLDrawing()
{
    // Clear the window
    glClear(GL_COLOR_BUFFER_BIT);
    // Set the modelview matrix to be the identity matrix
    glLoadIdentity();
}

// draw circle .. use d3d8
D:\Classes\Programming\Program I\assignment\c_game\OpenGL Framework\ShapeDraw.cpp(16):	glEnable(GL_POINT_SMOOTH);
 D:\Classes\Programming\Program I\assignment\c_game\OpenGL Framework\ShapeDraw.cpp(19):		glDisable(GL_TEXTURE_2D);
 D:\Classes\Programming\Program I\assignment\c_game\OpenGL Framework\ShapeDraw.cpp(22):		glPointSize(1.0);
 D:\Classes\Programming\Program I\assignment\c_game\OpenGL Framework\ShapeDraw.cpp(23):		glBegin(GL_POINTS);
 D:\Classes\Programming\Program I\assignment\c_game\OpenGL Framework\ShapeDraw.cpp(37):	    glColor4ub(r, g, b,0xFF);
 D:\Classes\Programming\Program I\assignment\c_game\OpenGL Framework\ShapeDraw.cpp(38):		glEnable(GL_BLEND);
 D:\Classes\Programming\Program I\assignment\c_game\OpenGL Framework\ShapeDraw.cpp(39):	    glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
 D:\Classes\Programming\Program I\assignment\c_game\OpenGL Framework\ShapeDraw.cpp(42):		glVertex2f(x, y);
 D:\Classes\Programming\Program I\assignment\c_game\OpenGL Framework\ShapeDraw.cpp(49):	glColor3ub(r, g, b);
 D:\Classes\Programming\Program I\assignment\c_game\OpenGL Framework\ShapeDraw.cpp(51):	glEnable(GL_LINE_SMOOTH);

 // draw line .. use d3d8
 D:\Classes\Programming\Program I\assignment\c_game\OpenGL Framework\ShapeDraw.cpp(53):	glBegin(GL_LINE_STRIP);
 D:\Classes\Programming\Program I\assignment\c_game\OpenGL Framework\ShapeDraw.cpp(54):		glVertex2f(startX, startY);
  D:\Classes\Programming\Program I\assignment\c_game\OpenGL Framework\SpriteDemoManager.cpp(58):	glEnable(GL_TEXTURE_2D);
  D:\Classes\Programming\Program I\assignment\c_game\OpenGL Framework\SpriteDemoManager.cpp(59):	glBindTexture (GL_TEXTURE_2D, mSpriteTextureMap);

   // draw sprite .. use d3d8x
  D:\Classes\Programming\Program I\assignment\c_game\OpenGL Framework\SpriteDemoManager.cpp(61):	glBegin (GL_QUADS);
  D:\Classes\Programming\Program I\assignment\c_game\OpenGL Framework\SpriteDemoManager.cpp(66):			GLfloat xPositionLeft = (getXPosition(x,y) - 32.0f)*4000.0f/1024.0f;
  D:\Classes\Programming\Program I\assignment\c_game\OpenGL Framework\SpriteDemoManager.cpp(80):			glColor4ub(0xFF, 0xFF, 0xFF,0xFF);
  D:\Classes\Programming\Program I\assignment\c_game\OpenGL Framework\SpriteDemoManager.cpp(81):			glTexCoord2f (xTextureCoord, yTextureCoord);
  D:\Classes\Programming\Program I\assignment\c_game\OpenGL Framework\SpriteDemoManager.cpp(88):			glVertex3f (xPositionLeft, yPositionBottom, 0.0);
  D:\Classes\Programming\Program I\assignment\c_game\OpenGL Framework\SpriteDemoManager.cpp(146):	glEnd ();





#endif // include guard
